package p1;

import java.util.Random;
import java.util.Scanner;

public class ados8 {
	static Random rand = new Random();
	static Scanner ler = new Scanner(System.in);
	public static final String resetar = "\u001B[0m";
	public static final String vermelho = "\u001B[31m";

	public static void main(String[] args) {
		int linha1 = 0, coluna1 = 0, tabus = 0;
		String tabB = "0123456789";
		int dificuldade = 0;

		do {
			System.out.println("Informe a dificuldade\n1= 3 tabuleiros de 5x5\n2= 3 tabuleiros de 10x10");
			dificuldade = ler.nextInt();
		} while (dificuldade > 2 || dificuldade < 1);

		int[] dimensoes = difi(dificuldade);
		linha1 = dimensoes[0];
		coluna1 = dimensoes[1];
		tabus = dimensoes[2];

		// Inicialização do tabuleiro
		String[][][] tabuleiro = new String[tabus][linha1][coluna1];
		for (int i = 0; i < tabus; i++) {
			for (int j = 0; j < linha1; j++) {
				for (int k = 0; k < coluna1; k++) {
					tabuleiro[i][j][k] = " * ";
				}
			}
		}

		System.out.println("Você tem 20 jogadas para tentar acertar os alvos");

		// Loop de jogadas
		for (int n = 0; n < 20; n++) {
			for (int i = 0; i < tabus; i++) {
				System.out.println("Camada " + i + ":");
				for (int j = 0; j < coluna1; j++) {
					for (int k = 0; k < linha1; k++) {
						if (j == 0) {
							char letra = tabB.charAt(k);
							System.out.print(" " + letra + " ");
						} else {
							System.out.print(tabuleiro[i][j][k]);
						}
					}
					System.out.println();
				}
				System.out.println();
			}

			System.out.println("Escolha a camada de 0 a " + (tabus - 1) + ":\nUma linha e uma coluna de 0 a "
					+ (linha1 - 1) + " para atacar:");
			int camada = ler.nextInt();
			int linha = ler.nextInt();
			int coluna = ler.nextInt();

			System.out.println(
					"/////////////////////////////////////////////////////////////////////////////////////////////");
			if (camada >= 0 && camada < tabus && linha >= 0 && linha < linha1 && coluna >= 0 && coluna < coluna1) {
				tabuleiro[camada][linha][coluna] = vermelho + " * " + resetar;
			} else {
				System.out.println("Posição inválida. Tente novamente.");
			}
		}
	}

	public static int[] difi(int dificuldade) {
		int linha, coluna, tabus;

		if (dificuldade == 1) {
			linha = 5;
			coluna = 5;
			tabus = 3;
		} else {
			linha = 10;
			coluna = 10;
			tabus = 3;
		}

		return new int[] { linha, coluna, tabus };
	}

	public static void navios(char[][][] tabuleiro, int naviosTotais, int difi) {
		int naviosNoTabuleiro = 0;
		int linha, coluna;

		while (naviosNoTabuleiro < naviosTotais) {
			if (difi == 1) {
				linha = rand.nextInt(5);
				coluna = rand.nextInt(5);
			} else {
				linha = rand.nextInt(10);
				coluna = rand.nextInt(10);
			}

			// Aqui assumindo que tabuleiro é do tipo char e deve ser inicializado
			// corretamente
			if (tabuleiro[0][linha][coluna] == ' ') { // Corrigir para verificar se a posição está livre
				tabuleiro[0][linha][coluna] = 'N'; // Coloca um navio
				naviosNoTabuleiro++;
			}
		}
	}
}